edition = "2023";

package example.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/go_features.proto";
import "nexus/v1/options.proto";

option features.(pb.go).api_level = API_HYBRID;
option features.field_presence = IMPLICIT;
option go_package = "github.com/bergundy/protoc-gen-go-nexus/example/gen/example/v1;example";

message ExampleInput {
  string foo = 1;
}

message ExampleOutput {
  string foo = 1;
}

service OneWay {
  option (nexus.v1.service).tags = "gen";

  rpc NoInput(google.protobuf.Empty) returns (ExampleOutput);

  rpc NoOutput(ExampleInput) returns (google.protobuf.Empty);
}

service TwoWay {
  // Also test options.
  option (nexus.v1.service).name = "example.v1.two-way";
  option (nexus.v1.service).tags = "gen";

  rpc Example(ExampleInput) returns (ExampleOutput) {
    // Also test options.
    option (nexus.v1.operation).name = "example";
  }
}

service ExcludeMe {
  // both gen and no-gen tagged, no-gen wins.
  option (nexus.v1.service).tags = "gen";
  option (nexus.v1.service).tags = "no-gen";

  rpc Example(ExampleInput) returns (ExampleOutput) {}

  rpc ExcludeMe(ExampleInput) returns (ExampleOutput) {
    option (nexus.v1.operation).tags = "no-gen";
  }
}

service ExcludeMeBecauseIAmUntagged {
  rpc Example(ExampleInput) returns (ExampleOutput) {}
}

service ExcludeMeBecauseMyOperationsAreExcluded {
  option (nexus.v1.service).tags = "gen";

  rpc Example(ExampleInput) returns (ExampleOutput) {
    option (nexus.v1.operation).tags = "no-gen";
  }
}

service IncludeWithExcludedMethods {
  option (nexus.v1.service).tags = "gen";

  rpc Example(ExampleInput) returns (ExampleOutput) {
    option (nexus.v1.operation).tags = "no-gen";
  }

  rpc IncludeMe(ExampleInput) returns (ExampleOutput);
}
